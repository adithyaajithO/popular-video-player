{"version":3,"sources":["app/components/SearchBar.js","app/components/ActionButton.js","app/components/VideoPlayer.js","app/components/LoadingSpinner.js","app/screens/VideoList.js","app/components/ChipKeyword.js","app/screens/VideoPlay.js","app/Routes.js","app/App.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexDirection","marginBottom","spacing","formControl","border","SearchBar","searchPhrase","style","setSearchPhrase","label","classes","className","TextField","id","value","onChange","e","target","variant","fullWidth","InputProps","endAdornment","length","IconButton","onClick","InputAdornment","position","responsiveIcon","breakpoints","down","fontSize","ActionButton","Icon","icon","player","top","left","title","cursor","VideoPlayer","setLoading","useState","videoTitle","setVideoTitle","light","setLight","playing","url","config","youtube","playerVars","origin","width","height","onReady","intPl","getInternalPlayer","getVideoData","Typography","component","loadingContainer","justifyContent","alignItems","LoadingSpinner","open","Modal","modal","aria-labelledby","aria-describedby","data-test","CircularProgress","endCenter","videoContainer","paddingTop","videoGroup","margin","toolBar","padding","VideoList","history","loading","setId","useEffect","push","Grid","item","xs","MicNoneOutlinedIcon","CastOutlinedIcon","TuneOutlinedIcon","videourls","map","el","indx","chip","ChipKeyword","chipColor","setChipColor","Chip","clickable","color","blackChip","backgroundColor","chipContainer","whiteSpace","overflowX","buttonGroup","VideoPlay","match","params","ThumbUpOutlinedIcon","ThumbDownOutlinedIcon","ShareOutlinedIcon","recommended","Routes","atEnter","offset","atLeave","atActive","mapStyles","styles","transform","path","render","from","to","App","basename","createMuiTheme","palette","primary","main","secondary","typography","h6","responsiveFontSizes","ThemeProvider","ReactDOM","process","document","getElementById"],"mappings":"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","file":"static/js/main.91e61695.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        // marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n        // maxWidth: '50%',\n    }, formControl: {\n        // marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n        border: 'none'\n    },\n}));\n\nconst SearchBar = ({\n    searchPhrase,\n    style = {\n        // width: '100%'\n    },\n    setSearchPhrase,\n    label = \"Search Videos\"\n}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <TextField\n                style={style}\n                id=\"searchBar\"\n                value={searchPhrase}\n                onChange={e => setSearchPhrase(e.target.value)}\n                variant=\"outlined\"\n                fullWidth\n                label={label}\n                InputProps={{\n                    endAdornment: searchPhrase.length !== 0 && (\n                        <IconButton onClick={() => setSearchPhrase('')}>\n                            <InputAdornment position=\"end\">\n                                <CloseIcon />\n                            </InputAdornment>\n                        </IconButton>\n                    ),\n                }}\n            />\n        </div>\n    )\n};\n\nexport default SearchBar;","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    responsiveIcon: {\n        [theme.breakpoints.down('md')]: {\n            fontSize: '1.25rem'\n        }\n    }\n}));\n\nconst ActionButton = ({\n    icon: Icon\n}) => {\n    const classes = useStyles();\n\n    return <IconButton>\n        <Icon className={classes.responsiveIcon} />\n    </IconButton>\n        ;\n}\n\nexport default ActionButton;\n","import React, { useState } from 'react';\nimport ReactPlayer from 'react-player'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    player: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n    }, title: {\n        position: 'absolute',\n        cursor: 'pointer'\n        // marginTop: theme.spacing(5)\n    }, container: {\n        marginBottom: theme.spacing(6)\n    }\n}));\n\nconst VideoPlayer = ({\n    id,\n    setLoading,\n}) => {\n    const classes = useStyles();\n\n    const [videoTitle, setVideoTitle] = useState('');\n    const [light, setLight] = useState(false);\n\n    return <div className={classes.container}>\n        <ReactPlayer\n            light={light}\n            className={classes.player}\n            playing={false}\n            url={`https://www.youtube.com/watch?v=${id}`}\n            config={{\n                youtube: {\n                    playerVars: {\n                        origin: 'http://localhost:3000',\n                    }\n                }\n            }}\n            width='100%'\n            height='100%'\n            onReady={({ getInternalPlayer }) => {\n                let intPl = getInternalPlayer();\n                setLoading(false);\n                setVideoTitle(intPl.getVideoData().title);\n                setLight(true);\n            }}\n        />\n        <Typography className={classes.title} variant='h6' component='h6'>\n            {videoTitle}\n        </Typography>\n    </div>;\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nconst useStyles = makeStyles(theme => ({\n    loadingContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n    }\n}));\n\nconst LoadingSpinner = ({ open }) => {\n    const classes = useStyles();\n\n    return (\n        <Modal\n            open={open}\n            className={classes.modal}\n            aria-labelledby=\"create-distributor-title\"\n            aria-describedby=\"create-distributor-form\"\n        >\n            <div className={classes.loadingContainer} data-test='loadingSpinner'>\n                <CircularProgress />\n            </div>\n        </Modal>\n    );\n};\n\nexport default LoadingSpinner;","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport SearchBar from '../components/SearchBar';\nimport ActionButton from '../components/ActionButton';\nimport VideoPlayer from '../components/VideoPlayer';\nimport MicNoneOutlinedIcon from '@material-ui/icons/MicNoneOutlined';\nimport CastOutlinedIcon from '@material-ui/icons/CastOutlined';\nimport TuneOutlinedIcon from '@material-ui/icons/TuneOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { videourls } from '../data/videodata.json';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst useStyles = makeStyles(theme => ({\n    endCenter: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n    }, videoContainer: {\n        position: 'relative',\n        paddingTop: '56.25% !important',\n    }, videoGroup: {\n        width: '50% !important',\n        margin: 'auto'\n    }, toolBar: {\n        padding: `${theme.spacing(2)}px 0 0 0`\n    }\n}));\n\nconst VideoList = ({\n    history\n}) => {\n    const [loading, setLoading] = useState(true);\n    const [searchPhrase, setSearchPhrase] = useState('');\n    const [id, setId] = useState('');\n    const classes = useStyles();\n\n    useEffect(() => {\n        if (id.length !== 0) {\n            history.push(`/video-play/${id}`)\n        }\n    }, [id]);\n\n    return (\n        <div>\n            <LoadingSpinner open={loading} />\n            <Grid container className={classes.toolBar}>\n                <Grid item xs={3} />\n                <Grid item xs={6}>\n                    <SearchBar\n                        searchPhrase={searchPhrase}\n                        setSearchPhrase={setSearchPhrase}\n                    />\n                </Grid>\n                <Grid item className={classes.endCenter} xs={1}>\n                    <ActionButton\n                        icon={MicNoneOutlinedIcon}\n                    />\n                </Grid>\n                <Grid item className={classes.endCenter} xs={1}>\n                    <ActionButton\n                        icon={CastOutlinedIcon}\n                    />\n                </Grid>\n                <Grid item className={classes.endCenter} xs={1}>\n                    <ActionButton\n                        icon={TuneOutlinedIcon}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container className={classes.videoGroup} spacing={3}>\n                {videourls.map((el, indx) => (\n                    <Grid\n                        key={indx}\n                        item xs={12}\n                        onClick={() => setId(el)}\n                    >\n                        <div className={classes.videoContainer}>\n                            <VideoPlayer\n                                id={el}\n                                setLoading={setLoading}\n                            />\n                        </div>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n};\n\nexport default VideoList;\n","import React, { useState } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    chip: {\n        margin: `${theme.spacing(1)}px ${theme.spacing(0.3)}px`\n    }\n}));\n\nconst ChipKeyword = ({\n    label,\n}) => {\n    const classes = useStyles();\n\n    const [chipColor, setChipColor] = useState('default');\n\n    const handleClassChange = () => {\n        if (chipColor === 'default') {\n            setChipColor('secondary');\n        } else {\n            setChipColor('default');\n        }\n    }\n\n    return <Chip\n        label={label}\n        clickable\n        onClick={handleClassChange}\n        color={chipColor}\n        className={classes.chip}\n    />;\n}\n\nexport default ChipKeyword;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VideoPlayer from '../components/VideoPlayer';\nimport ChipKeyword from '../components/ChipKeyword';\nimport Grid from '@material-ui/core/Grid';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { recommended } from '../data/videodata.json';\nimport ThumbUpOutlinedIcon from '@material-ui/icons/ThumbUpOutlined';\nimport ThumbDownOutlinedIcon from '@material-ui/icons/ThumbDownOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport ActionButton from '../components/ActionButton';\n\nconst useStyles = makeStyles(theme => ({\n    loadingContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n    }, blackChip: {\n        backgroundColor: 'black'\n    }, chipContainer: {\n        whiteSpace: 'noWrap',\n        overflowX: 'scroll',\n    }, videoContainer: {\n        position: 'relative',\n        paddingTop: '56.25% !important',\n    }, videoGroup: {\n        width: '50% !important',\n        // margin: 'auto'\n    }, buttonGroup: {\n        width: '30% !important',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        padding: `${theme.spacing(3)}px 0 0 0`\n    }\n}));\n\nconst VideoPlay = ({\n    match,\n    history\n}) => {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(true);\n    const [id, setId] = useState(match.params.id);\n\n    // const id = match.params.id;\n\n    useEffect(() => {\n        if (id.length !== 0) {\n            history.push(`/video-play/${id}`)\n        }\n    }, [id]);\n\n    const chipList = [\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n        'random 1',\n    ];\n\n    return (\n        <div key={id}>\n            <LoadingSpinner open={loading} />\n            <div className={classes.videoGroup}>\n                <div className={classes.videoContainer}>\n                    <VideoPlayer\n                        id={id}\n                        setLoading={setLoading}\n                    />\n                </div>\n            </div>\n            <Grid container spacing={3} className={classes.buttonGroup}>\n                <Grid item xs={4}>\n                    <ActionButton\n                        icon={ThumbUpOutlinedIcon}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <ActionButton\n                        icon={ThumbDownOutlinedIcon}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <ActionButton\n                        icon={ShareOutlinedIcon}\n                    />\n                </Grid>\n            </Grid>\n            <div className={classes.chipContainer}>\n                {chipList.map((el, indx) => (\n                    <ChipKeyword\n                        label={el}\n                        key={indx}\n                    />\n                ))}\n            </div>\n            <Grid container className={classes.videoGroup} spacing={3}>\n                {recommended.map((el, indx) => (\n                    <Grid\n                        key={indx}\n                        item xs={12}\n                        onClick={() => setId(el)}\n                    >\n                        <div className={classes.videoContainer}>\n                            <VideoPlayer\n                                id={el}\n                                setLoading={setLoading}\n                            />\n                        </div>\n                    </Grid>\n                ))}\n            </Grid>\n        </div >\n    );\n};\n\nexport default VideoPlay;\n","import { Switch, Redirect, Route } from 'react-router-dom';\nimport { AnimatedSwitch } from 'react-router-transition';\nimport VideoList from './screens/VideoList';\nimport VideoPlay from './screens/VideoPlay';\n\nconst Routes = () => (\n    <AnimatedSwitch\n        atEnter={{ offset: -100 }}\n        atLeave={{ offset: -100 }}\n        atActive={{ offset: 0 }}\n        mapStyles={(styles) => ({\n            transform: `translate(${styles.offset}%)`,\n        })}>\n        <Route\n            path='/video-list'\n            render={params => <VideoList {...params} />}\n        />\n        <Route\n            path='/video-play/:id'\n            render={params => <VideoPlay {...params} />}\n        />\n        <Redirect from='/' to='/video-list' />\n    </AnimatedSwitch>\n);\n\nexport default Routes;\n","import { BrowserRouter } from \"react-router-dom\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes\n} from '@material-ui/core/styles';\nimport Routes from './Routes';\n\nconst App = ({ basename }) => {\n  let theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#FF4910'\n      },\n      secondary: {\n        main: '#606060'\n      },\n    },\n    typography: {\n      h6: {\n        '@media (max-width:600px)': {\n          fontSize: '0.75rem',\n        },\n      }\n    }\n  });\n\n  theme = responsiveFontSizes(theme);\n\n  return (\n    <ThemeProvider theme={theme} >\n      <BrowserRouter basename={basename}>\n        <Routes />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\n\nconst { PUBLIC_URL } = process.env;\n\nReactDOM.render(\n  <App basename={PUBLIC_URL} />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}